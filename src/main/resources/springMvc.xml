<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="cn.LysGroup.controller"/>
    <!--配置视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- JSP文件所在的目录 -->
        <property name="prefix" value="/pages/"/>
        <!-- 文件的后缀名 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 开启 SpringSecurity 注解，注意，该注解必须写在SpringMVC的配置文件中，否则 SpringSecurity 的注解会无效！
     首先如果你权限限制的方法在某个bean里面，并且，这个bean由SpringMVC管理，那么我们打开SpringSecurity的配置扫描，
     就写在SpringMVC的配置文件中！！！反之，如果权限限制的方法在某个bean里面，并且这个bean由Spring管理，
     那么就配置在Spring的配置文件中！！！总之，谁管理这个bean，就写在谁里面
    -->
    <security:global-method-security
            pre-post-annotations="enabled"
            jsr250-annotations="enabled"
            secured-annotations="enabled"
    />
    <!--释放静态资源，就是把资源交给原生的servlet-->
    <mvc:default-servlet-handler/>
    <!--开启注解-->
    <mvc:annotation-driven/>

    <!--配置aop日志-->
    <!--通知类-->
    <bean id="logAop" class="cn.LysGroup.utils.LogAop"/>
    <aop:config>
        <!--配置切入点表达式，给controller所有方法进行增强-->
        <aop:pointcut id="advice" expression="execution(* cn.LysGroup.controller.*.*(..))"/>
        <!--配置切面-->
        <aop:aspect id="advice" ref="logAop">
            <aop:before method="before" pointcut-ref="advice"/>
            <aop:after method="after" pointcut-ref="advice"/>
        </aop:aspect>
    </aop:config>
</beans>